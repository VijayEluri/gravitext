#!/usr/bin/env jruby
# -*- ruby -*-

#--
# Copyright (c) 2008-2013 David Kellum
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You
# may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the License for the specific language governing
# permissions and limitations under the License.
#++

$LOAD_PATH.unshift File.join( File.dirname(__FILE__), "..", "lib" )

require 'rubygems'

require 'gravitext-xmlprod'
require 'gravitext-xmlprod/extensions'
require 'gravitext-util/perftest'
require 'optparse'

require 'java'

class TestCollection
  include Gravitext
  include Gravitext::XMLProd
  include Gravitext::Concurrent

  import 'com.gravitext.xml.producer.perftests.PerfTestFactory'
  import 'com.gravitext.xml.producer.perftests.StringBufferEncodePerfTest'
  import 'com.gravitext.xml.tree.TreePerfTest'
  import 'com.gravitext.xml.tree.StAXUtils'
  import 'com.gravitext.xml.tree.TreeUtils'

  def run
    options = {}
    OptionParser.new do |opts|
      opts.banner = "Usage: gravitext-xmlprod-perftest [options] <test>"
      opts.on("-t", "--threads N", Integer, "Test with thread count" ) do |n|
        options[ :threads ] = n
      end
    end.parse!

    tests = lookup_factories( ARGV.shift || 'producer' )

    harness = PerfTest::Harness.new( tests )
    harness.thread_count = options[ :threads ] if options[ :threads ]
    harness.execute
  end

  def lookup_factories( name )
    case name
    when 'producer'
      require 'rjack-jdom'

      tests = PerfTestFactory::Serializer.values.map do |s|
        PerfTestFactory.new( s )
      end

      tests.each do |t|
        #t.use_writer = false
        #t.do_encode = true
        #t.encoding = 'UTF-8'
      end

      tests

    when 'encode'
      tests = Array.new(2) { StringBufferEncodePerfTest.new }
      tests.zip( [ false, true ] ) { |test,b| test.use_char_buffer = b }
      tests

    when 'tree', 'tree_write'

      if ARGV.empty?
        ddir = File.join( File.dirname(__FILE__), '..', 'test', 'xml' )
        files = Dir.glob( File.join( ddir, "*.xml" ) )
      else
        files = ARGV
      end

      xml = files.map do |xfile|
        IO.read( xfile ).to_java_bytes
      end

      TreePerfTest::Impl.values.map do |s|
        TreePerfTest.new( xml, s, ( name == 'tree_write' ) )
      end

    when 'ruby_parse'
      xfile = File.join( File.dirname(__FILE__), '..',
                         'test/xml/huffingtonpost.full.atom.xml' )
      xml = IO.read( xfile )
      [ BlockTestFactory.new( "parse_tree-ext" ) do
          parse_tree( xml ).children.length
        end,
        BlockTestFactory.new( "stax_parse" ) do
          StAXUtils::staxParse( StAXUtils::staxInput( xml ) ).children.length
        end ]

    when 'ruby'
      xfile = File.join( File.dirname(__FILE__), '..',
                         'test/xml/huffingtonpost.full.atom.xml' )

      root = parse_tree( IO.read( xfile ) )

      [ BlockTestFactory.new( "write_element-ext" ) do
          root.to_xml.length
        end,
        BlockTestFactory.new( "produce_string" ) do
          TreeUtils.produce_string( root, Indentor::COMPRESSED ).length
        end ]

    else
      raise "No test named #{name}."
    end

  end
end

TestCollection.new.run
