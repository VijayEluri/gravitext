#!/usr/bin/env jruby
# -*- ruby -*-

#--
# Copyright (c) 2008-2010 David Kellum
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You
# may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the License for the specific language governing
# permissions and limitations under the License.
#++

$LOAD_PATH.unshift File.join( File.dirname(__FILE__), "..", "lib" )

require 'rubygems'

require 'gravitext-xmlprod'
require 'gravitext-util/perftest'

require 'java'

module TestCollection
  include Gravitext
  include Gravitext::Concurrent

  import 'com.gravitext.xml.producer.perftests.PerfTestFactory'
  import 'com.gravitext.xml.producer.perftests.StringBufferEncodePerfTest'
  import 'com.gravitext.xml.tree.TreePerfTest'

  def self.run
    tests = TestCollection::lookup_factories( ARGV[0] || 'producer' )

    harness = PerfTest::Harness.new( tests )
    #FIXME: -c
    # harness.thread_count = 2

    harness.execute
  end

  def self.lookup_factories( name )
    case name
    when 'producer'
      require 'rjack-jdom'

      tests = PerfTestFactory::Serializer.values.map do |s|
        PerfTestFactory.new( s )
      end

      tests.each do |t|
        #t.use_writer = false
        #t.do_encode = true
        #t.encoding = 'UTF-8'
      end

      tests

    when 'encode'
      tests = Array.new(2) { StringBufferEncodePerfTest.new }
      tests.zip( [ false, true ] ) { |test,b| test.use_char_buffer = b }
      tests

    when 'tree'
      xfile = ( ARGV[1] ||
                File.join( File.dirname(__FILE__),
                           '..', 'test', 'xml', 'huffingtonpost.full.atom.xml' ) )
      xml = IO.read( xfile ).to_java_bytes

      [ false, true ].map do |do_write|
        TreePerfTest::Impl.values.map do |s|
          TreePerfTest.new( xml, s, do_write )
        end
      end.flatten

    end
  end
end

TestCollection.run
